0516f3e5dd64b59e1403ff531deff300
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var ReactNativeStyleAttributes = require('./ReactNativeStyleAttributes');

var UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityLiveRegion: true,
  accessibilityRole: true,
  accessibilityState: true,
  accessibilityValue: true,
  accessibilityHint: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  onAccessibilityEscape: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};
var RCTView = (0, _extends2.default)({}, UIView, {
  removeClippedSubviews: true
});
var ReactNativeViewAttributes = {
  UIView: UIView,
  RCTView: RCTView
};
module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuanMiXSwibmFtZXMiOlsiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJyZXF1aXJlIiwiVUlWaWV3IiwicG9pbnRlckV2ZW50cyIsImFjY2Vzc2libGUiLCJhY2Nlc3NpYmlsaXR5QWN0aW9ucyIsImFjY2Vzc2liaWxpdHlMYWJlbCIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJhY2Nlc3NpYmlsaXR5U3RhdGUiLCJhY2Nlc3NpYmlsaXR5VmFsdWUiLCJhY2Nlc3NpYmlsaXR5SGludCIsImltcG9ydGFudEZvckFjY2Vzc2liaWxpdHkiLCJuYXRpdmVJRCIsInRlc3RJRCIsInJlbmRlclRvSGFyZHdhcmVUZXh0dXJlQW5kcm9pZCIsInNob3VsZFJhc3Rlcml6ZUlPUyIsIm9uTGF5b3V0Iiwib25BY2Nlc3NpYmlsaXR5QWN0aW9uIiwib25BY2Nlc3NpYmlsaXR5VGFwIiwib25NYWdpY1RhcCIsIm9uQWNjZXNzaWJpbGl0eUVzY2FwZSIsImNvbGxhcHNhYmxlIiwibmVlZHNPZmZzY3JlZW5BbHBoYUNvbXBvc2l0aW5nIiwic3R5bGUiLCJSQ1RWaWV3IiwicmVtb3ZlQ2xpcHBlZFN1YnZpZXdzIiwiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7QUFFQSxJQUFNQSwwQkFBMEIsR0FBR0MsT0FBTyxDQUFDLDhCQUFELENBQTFDOztBQUVBLElBQU1DLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxhQUFhLEVBQUUsSUFERjtBQUViQyxFQUFBQSxVQUFVLEVBQUUsSUFGQztBQUdiQyxFQUFBQSxvQkFBb0IsRUFBRSxJQUhUO0FBSWJDLEVBQUFBLGtCQUFrQixFQUFFLElBSlA7QUFLYkMsRUFBQUEsdUJBQXVCLEVBQUUsSUFMWjtBQU1iQyxFQUFBQSxpQkFBaUIsRUFBRSxJQU5OO0FBT2JDLEVBQUFBLGtCQUFrQixFQUFFLElBUFA7QUFRYkMsRUFBQUEsa0JBQWtCLEVBQUUsSUFSUDtBQVNiQyxFQUFBQSxpQkFBaUIsRUFBRSxJQVROO0FBVWJDLEVBQUFBLHlCQUF5QixFQUFFLElBVmQ7QUFXYkMsRUFBQUEsUUFBUSxFQUFFLElBWEc7QUFZYkMsRUFBQUEsTUFBTSxFQUFFLElBWks7QUFhYkMsRUFBQUEsOEJBQThCLEVBQUUsSUFibkI7QUFjYkMsRUFBQUEsa0JBQWtCLEVBQUUsSUFkUDtBQWViQyxFQUFBQSxRQUFRLEVBQUUsSUFmRztBQWdCYkMsRUFBQUEscUJBQXFCLEVBQUUsSUFoQlY7QUFpQmJDLEVBQUFBLGtCQUFrQixFQUFFLElBakJQO0FBa0JiQyxFQUFBQSxVQUFVLEVBQUUsSUFsQkM7QUFtQmJDLEVBQUFBLHFCQUFxQixFQUFFLElBbkJWO0FBb0JiQyxFQUFBQSxXQUFXLEVBQUUsSUFwQkE7QUFxQmJDLEVBQUFBLDhCQUE4QixFQUFFLElBckJuQjtBQXNCYkMsRUFBQUEsS0FBSyxFQUFFeEI7QUF0Qk0sQ0FBZjtBQXlCQSxJQUFNeUIsT0FBTyw4QkFDUnZCLE1BRFE7QUFRWHdCLEVBQUFBLHFCQUFxQixFQUFFO0FBUlosRUFBYjtBQVdBLElBQU1DLHlCQUF5QixHQUFHO0FBQ2hDekIsRUFBQUEsTUFBTSxFQUFFQSxNQUR3QjtBQUVoQ3VCLEVBQUFBLE9BQU8sRUFBRUE7QUFGdUIsQ0FBbEM7QUFLQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRix5QkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMgPSByZXF1aXJlKCcuL1JlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzJyk7XG5cbmNvbnN0IFVJVmlldyA9IHtcbiAgcG9pbnRlckV2ZW50czogdHJ1ZSxcbiAgYWNjZXNzaWJsZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUFjdGlvbnM6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMYWJlbDogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUxpdmVSZWdpb246IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlSb2xlOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5U3RhdGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlWYWx1ZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUhpbnQ6IHRydWUsXG4gIGltcG9ydGFudEZvckFjY2Vzc2liaWxpdHk6IHRydWUsXG4gIG5hdGl2ZUlEOiB0cnVlLFxuICB0ZXN0SUQ6IHRydWUsXG4gIHJlbmRlclRvSGFyZHdhcmVUZXh0dXJlQW5kcm9pZDogdHJ1ZSxcbiAgc2hvdWxkUmFzdGVyaXplSU9TOiB0cnVlLFxuICBvbkxheW91dDogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5QWN0aW9uOiB0cnVlLFxuICBvbkFjY2Vzc2liaWxpdHlUYXA6IHRydWUsXG4gIG9uTWFnaWNUYXA6IHRydWUsXG4gIG9uQWNjZXNzaWJpbGl0eUVzY2FwZTogdHJ1ZSxcbiAgY29sbGFwc2FibGU6IHRydWUsXG4gIG5lZWRzT2Zmc2NyZWVuQWxwaGFDb21wb3NpdGluZzogdHJ1ZSxcbiAgc3R5bGU6IFJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzLFxufTtcblxuY29uc3QgUkNUVmlldyA9IHtcbiAgLi4uVUlWaWV3LFxuXG4gIC8vIFRoaXMgaXMgYSBzcGVjaWFsIHBlcmZvcm1hbmNlIHByb3BlcnR5IGV4cG9zZWQgYnkgUkNUVmlldyBhbmQgdXNlZnVsIGZvclxuICAvLyBzY3JvbGxpbmcgY29udGVudCB3aGVuIHRoZXJlIGFyZSBtYW55IHN1YnZpZXdzLCBtb3N0IG9mIHdoaWNoIGFyZSBvZmZzY3JlZW4uXG4gIC8vIEZvciB0aGlzIHByb3BlcnR5IHRvIGJlIGVmZmVjdGl2ZSwgaXQgbXVzdCBiZSBhcHBsaWVkIHRvIGEgdmlldyB0aGF0IGNvbnRhaW5zXG4gIC8vIG1hbnkgc3Vidmlld3MgdGhhdCBleHRlbmQgb3V0c2lkZSBpdHMgYm91bmQuIFRoZSBzdWJ2aWV3cyBtdXN0IGFsc28gaGF2ZVxuICAvLyBvdmVyZmxvdzogaGlkZGVuLCBhcyBzaG91bGQgdGhlIGNvbnRhaW5pbmcgdmlldyAob3Igb25lIG9mIGl0cyBzdXBlcnZpZXdzKS5cbiAgcmVtb3ZlQ2xpcHBlZFN1YnZpZXdzOiB0cnVlLFxufTtcblxuY29uc3QgUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyA9IHtcbiAgVUlWaWV3OiBVSVZpZXcsXG4gIFJDVFZpZXc6IFJDVFZpZXcsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXM7XG4iXX0=
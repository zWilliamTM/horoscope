{"version":3,"sources":["TextNativeComponent.js"],"names":["NativeText","validAttributes","ReactNativeViewAttributes","UIView","isHighlighted","numberOfLines","ellipsizeMode","allowFontScaling","maxFontSizeMultiplier","disabled","selectable","selectionColor","adjustsFontSizeToFit","minimumFontScale","textBreakStrategy","onTextLayout","onInlineViewLayout","dataDetectorType","directEventTypes","topTextLayout","registrationName","topInlineViewLayout","uiViewClassName","NativeVirtualText","UIManager","getViewManagerConfig"],"mappings":"AAUA;;;;;;;;;;;AAEA;;AACA;;AAEA;;AAUO,IAAMA,UAA0C,GAAI,8CACzD,SADyD,EAEzD;AAAA,SAAO;AACLC,IAAAA,eAAe,6BACVC,mCAA0BC,MADhB;AAEbC,MAAAA,aAAa,EAAE,IAFF;AAGbC,MAAAA,aAAa,EAAE,IAHF;AAIbC,MAAAA,aAAa,EAAE,IAJF;AAKbC,MAAAA,gBAAgB,EAAE,IALL;AAMbC,MAAAA,qBAAqB,EAAE,IANV;AAObC,MAAAA,QAAQ,EAAE,IAPG;AAQbC,MAAAA,UAAU,EAAE,IARC;AASbC,MAAAA,cAAc,EAAE,IATH;AAUbC,MAAAA,oBAAoB,EAAE,IAVT;AAWbC,MAAAA,gBAAgB,EAAE,IAXL;AAYbC,MAAAA,iBAAiB,EAAE,IAZN;AAabC,MAAAA,YAAY,EAAE,IAbD;AAcbC,MAAAA,kBAAkB,EAAE,IAdP;AAebC,MAAAA,gBAAgB,EAAE;AAfL,MADV;AAkBLC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,gBAAgB,EAAE;AADL,OADC;AAIhBC,MAAAA,mBAAmB,EAAE;AACnBD,QAAAA,gBAAgB,EAAE;AADC;AAJL,KAlBb;AA0BLE,IAAAA,eAAe,EAAE;AA1BZ,GAAP;AAAA,CAFyD,CAApD;;AAgCA,IAAMC,iBAAiD,GAC5DC,mBAAUC,oBAAV,CAA+B,gBAA/B,KAAoD,IAApD,GACIzB,UADJ,GAEK,8CAAgC,gBAAhC,EAAkD;AAAA,SAAO;AACxDC,IAAAA,eAAe,6BACVC,mCAA0BC,MADhB;AAEbC,MAAAA,aAAa,EAAE,IAFF;AAGbI,MAAAA,qBAAqB,EAAE;AAHV,MADyC;AAMxDc,IAAAA,eAAe,EAAE;AANuC,GAAP;AAAA,CAAlD,CAHA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport ReactNativeViewAttributes from '../Components/View/ReactNativeViewAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport {type HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport createReactNativeComponentClass from '../Renderer/shims/createReactNativeComponentClass';\nimport {type ProcessedColorValue} from '../StyleSheet/processColor';\nimport {type TextProps} from './TextProps';\n\ntype NativeTextProps = $ReadOnly<{\n  ...TextProps,\n  isHighlighted?: ?boolean,\n  selectionColor?: ?ProcessedColorValue,\n}>;\n\nexport const NativeText: HostComponent<NativeTextProps> = (createReactNativeComponentClass(\n  'RCTText',\n  () => ({\n    validAttributes: {\n      ...ReactNativeViewAttributes.UIView,\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      onInlineViewLayout: true,\n      dataDetectorType: true,\n    },\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout',\n      },\n      topInlineViewLayout: {\n        registrationName: 'onInlineViewLayout',\n      },\n    },\n    uiViewClassName: 'RCTText',\n  }),\n): any);\n\nexport const NativeVirtualText: HostComponent<NativeTextProps> =\n  UIManager.getViewManagerConfig('RCTVirtualText') == null\n    ? NativeText\n    : (createReactNativeComponentClass('RCTVirtualText', () => ({\n        validAttributes: {\n          ...ReactNativeViewAttributes.UIView,\n          isHighlighted: true,\n          maxFontSizeMultiplier: true,\n        },\n        uiViewClassName: 'RCTVirtualText',\n      })): any);\n"]}
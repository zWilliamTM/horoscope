bc625ee51d2d5f3b550b3094553f5e48
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var DeprecatedColorPropType = require('./DeprecatedColorPropType');

var DeprecatedLayoutPropTypes = require('./DeprecatedLayoutPropTypes');

var DeprecatedShadowPropTypesIOS = require('./DeprecatedShadowPropTypesIOS');

var DeprecatedTransformPropTypes = require('./DeprecatedTransformPropTypes');

var ReactPropTypes = require('prop-types');

var ImageStylePropTypes = (0, _extends2.default)({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: DeprecatedColorPropType,
  borderColor: DeprecatedColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
  tintColor: DeprecatedColorPropType,
  opacity: ReactPropTypes.number,
  overlayColor: ReactPropTypes.string,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});
module.exports = ImageStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzLmpzIl0sIm5hbWVzIjpbIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlIiwicmVxdWlyZSIsIkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMiLCJEZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TIiwiRGVwcmVjYXRlZFRyYW5zZm9ybVByb3BUeXBlcyIsIlJlYWN0UHJvcFR5cGVzIiwiSW1hZ2VTdHlsZVByb3BUeXBlcyIsInJlc2l6ZU1vZGUiLCJvbmVPZiIsImJhY2tmYWNlVmlzaWJpbGl0eSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyV2lkdGgiLCJudW1iZXIiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsInRpbnRDb2xvciIsIm9wYWNpdHkiLCJvdmVybGF5Q29sb3IiLCJzdHJpbmciLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7O0FBRUEsSUFBTUEsdUJBQXVCLEdBQUdDLE9BQU8sQ0FBQywyQkFBRCxDQUF2Qzs7QUFDQSxJQUFNQyx5QkFBeUIsR0FBR0QsT0FBTyxDQUFDLDZCQUFELENBQXpDOztBQUNBLElBQU1FLDRCQUE0QixHQUFHRixPQUFPLENBQUMsZ0NBQUQsQ0FBNUM7O0FBQ0EsSUFBTUcsNEJBQTRCLEdBQUdILE9BQU8sQ0FBQyxnQ0FBRCxDQUE1Qzs7QUFDQSxJQUFNSSxjQUFjLEdBQUdKLE9BQU8sQ0FBQyxZQUFELENBQTlCOztBQUVBLElBQU1LLG1CQUFtQiw4QkFDcEJKLHlCQURvQixFQUVwQkMsNEJBRm9CLEVBR3BCQyw0QkFIb0I7QUFJdkJHLEVBQUFBLFVBQVUsRUFBR0YsY0FBYyxDQUFDRyxLQUFmLENBQXFCLENBQ2hDLFFBRGdDLEVBRWhDLFNBRmdDLEVBR2hDLE9BSGdDLEVBSWhDLFFBSmdDLEVBS2hDLFNBTGdDLENBQXJCLENBSlU7QUFhdkJDLEVBQUFBLGtCQUFrQixFQUFHSixjQUFjLENBQUNHLEtBQWYsQ0FBcUIsQ0FDeEMsU0FEd0MsRUFFeEMsUUFGd0MsQ0FBckIsQ0FiRTtBQWlCdkJFLEVBQUFBLGVBQWUsRUFBRVYsdUJBakJNO0FBa0J2QlcsRUFBQUEsV0FBVyxFQUFFWCx1QkFsQlU7QUFtQnZCWSxFQUFBQSxXQUFXLEVBQUVQLGNBQWMsQ0FBQ1EsTUFuQkw7QUFvQnZCQyxFQUFBQSxZQUFZLEVBQUVULGNBQWMsQ0FBQ1EsTUFwQk47QUFxQnZCRSxFQUFBQSxRQUFRLEVBQUdWLGNBQWMsQ0FBQ0csS0FBZixDQUFxQixDQUM5QixTQUQ4QixFQUU5QixRQUY4QixDQUFyQixDQXJCWTtBQTZCdkJRLEVBQUFBLFNBQVMsRUFBRWhCLHVCQTdCWTtBQThCdkJpQixFQUFBQSxPQUFPLEVBQUVaLGNBQWMsQ0FBQ1EsTUE5QkQ7QUFnRHZCSyxFQUFBQSxZQUFZLEVBQUViLGNBQWMsQ0FBQ2MsTUFoRE47QUFtRHZCQyxFQUFBQSxtQkFBbUIsRUFBRWYsY0FBYyxDQUFDUSxNQW5EYjtBQW9EdkJRLEVBQUFBLG9CQUFvQixFQUFFaEIsY0FBYyxDQUFDUSxNQXBEZDtBQXFEdkJTLEVBQUFBLHNCQUFzQixFQUFFakIsY0FBYyxDQUFDUSxNQXJEaEI7QUFzRHZCVSxFQUFBQSx1QkFBdUIsRUFBRWxCLGNBQWMsQ0FBQ1E7QUF0RGpCLEVBQXpCO0FBeURBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixtQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSA9IHJlcXVpcmUoJy4vRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUnKTtcbmNvbnN0IERlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMnKTtcbmNvbnN0IERlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MnKTtcbmNvbnN0IERlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMnKTtcbmNvbnN0IFJlYWN0UHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG5jb25zdCBJbWFnZVN0eWxlUHJvcFR5cGVzID0ge1xuICAuLi5EZXByZWNhdGVkTGF5b3V0UHJvcFR5cGVzLFxuICAuLi5EZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TLFxuICAuLi5EZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzLFxuICByZXNpemVNb2RlOiAoUmVhY3RQcm9wVHlwZXMub25lT2YoW1xuICAgICdjZW50ZXInLFxuICAgICdjb250YWluJyxcbiAgICAnY292ZXInLFxuICAgICdyZXBlYXQnLFxuICAgICdzdHJldGNoJyxcbiAgXSk6IFJlYWN0JFByb3BUeXBlJFByaW1pdGl2ZTxcbiAgICAnY2VudGVyJyB8ICdjb250YWluJyB8ICdjb3ZlcicgfCAncmVwZWF0JyB8ICdzdHJldGNoJyxcbiAgPiksXG4gIGJhY2tmYWNlVmlzaWJpbGl0eTogKFJlYWN0UHJvcFR5cGVzLm9uZU9mKFtcbiAgICAndmlzaWJsZScsXG4gICAgJ2hpZGRlbicsXG4gIF0pOiBSZWFjdCRQcm9wVHlwZSRQcmltaXRpdmU8J3Zpc2libGUnIHwgJ2hpZGRlbic+KSxcbiAgYmFja2dyb3VuZENvbG9yOiBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSxcbiAgYm9yZGVyQ29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBib3JkZXJXaWR0aDogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgb3ZlcmZsb3c6IChSZWFjdFByb3BUeXBlcy5vbmVPZihbXG4gICAgJ3Zpc2libGUnLFxuICAgICdoaWRkZW4nLFxuICBdKTogUmVhY3QkUHJvcFR5cGUkUHJpbWl0aXZlPCd2aXNpYmxlJyB8ICdoaWRkZW4nPiksXG5cbiAgLyoqXG4gICAqIENoYW5nZXMgdGhlIGNvbG9yIG9mIGFsbCB0aGUgbm9uLXRyYW5zcGFyZW50IHBpeGVscyB0byB0aGUgdGludENvbG9yLlxuICAgKi9cbiAgdGludENvbG9yOiBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSxcbiAgb3BhY2l0eTogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICAvKipcbiAgICogV2hlbiB0aGUgaW1hZ2UgaGFzIHJvdW5kZWQgY29ybmVycywgc3BlY2lmeWluZyBhbiBvdmVybGF5Q29sb3Igd2lsbFxuICAgKiBjYXVzZSB0aGUgcmVtYWluaW5nIHNwYWNlIGluIHRoZSBjb3JuZXJzIHRvIGJlIGZpbGxlZCB3aXRoIGEgc29saWQgY29sb3IuXG4gICAqIFRoaXMgaXMgdXNlZnVsIGluIGNhc2VzIHdoaWNoIGFyZSBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBBbmRyb2lkXG4gICAqIGltcGxlbWVudGF0aW9uIG9mIHJvdW5kZWQgY29ybmVyczpcbiAgICogICAtIENlcnRhaW4gcmVzaXplIG1vZGVzLCBzdWNoIGFzICdjb250YWluJ1xuICAgKiAgIC0gQW5pbWF0ZWQgR0lGc1xuICAgKlxuICAgKiBBIHR5cGljYWwgd2F5IHRvIHVzZSB0aGlzIHByb3AgaXMgd2l0aCBpbWFnZXMgZGlzcGxheWVkIG9uIGEgc29saWRcbiAgICogYmFja2dyb3VuZCBhbmQgc2V0dGluZyB0aGUgYG92ZXJsYXlDb2xvcmAgdG8gdGhlIHNhbWUgY29sb3JcbiAgICogYXMgdGhlIGJhY2tncm91bmQuXG4gICAqXG4gICAqIEZvciBkZXRhaWxzIG9mIGhvdyB0aGlzIHdvcmtzIHVuZGVyIHRoZSBob29kLCBzZWVcbiAgICogaHR0cDovL2ZyZXNjb2xpYi5vcmcvZG9jcy9yb3VuZGVkLWNvcm5lcnMtYW5kLWNpcmNsZXMuaHRtbFxuICAgKlxuICAgKiBAcGxhdGZvcm0gYW5kcm9pZFxuICAgKi9cbiAgb3ZlcmxheUNvbG9yOiBSZWFjdFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLy8gQW5kcm9pZC1TcGVjaWZpYyBzdHlsZXNcbiAgYm9yZGVyVG9wTGVmdFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJUb3BSaWdodFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEltYWdlU3R5bGVQcm9wVHlwZXM7XG4iXX0=